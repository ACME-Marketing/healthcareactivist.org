---
// src/components/ActionCard.astro
export interface Props {
  title: string;
  description: string;
  actionType: 'urgent' | 'ongoing' | 'completed';
  progress?: number;
  deadline?: string;
  participants?: number;
  ctaText: string;
  ctaLink: string;
  tags?: string[];
}

const { 
  title, 
  description, 
  actionType, 
  progress = 0, 
  deadline, 
  participants = 0, 
  ctaText, 
  ctaLink,
  tags = []
} = Astro.props;

const getActionTypeStyles = (type: string) => {
  switch (type) {
    case 'urgent':
      return {
        badge: 'bg-red-100 text-red-800 border-red-200',
        icon: 'text-red-600',
        label: 'URGENT ACTION'
      };
    case 'ongoing':
      return {
        badge: 'bg-blue-100 text-blue-800 border-blue-200',
        icon: 'text-blue-600',
        label: 'ONGOING CAMPAIGN'
      };
    case 'completed':
      return {
        badge: 'bg-green-100 text-green-800 border-green-200',
        icon: 'text-green-600',
        label: 'COMPLETED'
      };
    default:
      return {
        badge: 'bg-gray-100 text-gray-800 border-gray-200',
        icon: 'text-gray-600',
        label: 'ACTION'
      };
  }
};

const styles = getActionTypeStyles(actionType);
---

<div class="bg-white rounded-lg shadow-lg hover:shadow-xl transition-shadow duration-300 overflow-hidden">
  <!-- Header with action type badge -->
  <div class="p-6 pb-4">
    <div class="flex items-center justify-between mb-4">
      <div class={`inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold border ${styles.badge}`}>
        {actionType === 'urgent' && (
          <svg class={`w-3 h-3 mr-1 ${styles.icon}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
          </svg>
        )}
        {actionType === 'ongoing' && (
          <svg class={`w-3 h-3 mr-1 ${styles.icon}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
          </svg>
        )}
        {actionType === 'completed' && (
          <svg class={`w-3 h-3 mr-1 ${styles.icon}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
          </svg>
        )}
        {styles.label}
      </div>
      
      {deadline && actionType !== 'completed' && (
        <div class="text-sm text-gray-600">
          <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          {deadline}
        </div>
      )}
    </div>
    
    <h3 class="text-xl font-bold font-heading text-primary mb-3 leading-tight">{title}</h3>
    <p class="text-text leading-relaxed mb-4">{description}</p>
    
    {tags.length > 0 && (
      <div class="flex flex-wrap gap-2 mb-4">
        {tags.map(tag => (
          <span class="inline-block bg-gray-100 text-gray-700 text-xs px-2 py-1 rounded-full">
            #{tag}
          </span>
        ))}
      </div>
    )}
  </div>
  
  <!-- Progress section (for ongoing campaigns) -->
  {actionType === 'ongoing' && progress > 0 && (
    <div class="px-6 pb-4">
      <div class="flex items-center justify-between text-sm text-gray-600 mb-2">
        <span>Progress</span>
        <span>{progress}% complete</span>
      </div>
      <div class="w-full bg-gray-200 rounded-full h-2">
        <div 
          class="bg-accent h-2 rounded-full transition-all duration-300" 
          style={`width: ${progress}%`}
        ></div>
      </div>
    </div>
  )}
  
  <!-- Stats section -->
  {participants > 0 && (
    <div class="px-6 pb-4">
      <div class="flex items-center text-sm text-gray-600">
        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
        </svg>
        {participants.toLocaleString()} participants
      </div>
    </div>
  )}
  
  <!-- Action button -->
  <div class="px-6 pb-6">
    {actionType === 'completed' ? (
      <button class="w-full btn-secondary opacity-75 cursor-not-allowed" disabled>
        Campaign Completed
      </button>
    ) : (
      <a href={ctaLink} class={`w-full text-center block ${actionType === 'urgent' ? 'btn-primary' : 'btn-secondary'}`}>
        {ctaText}
        <svg class="w-4 h-4 ml-2 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
        </svg>
      </a>
    )}
  </div>
  
  <!-- Social sharing buttons -->
  <div class="bg-gray-50 px-6 py-4 border-t">
    <div class="flex items-center justify-between">
      <span class="text-sm font-semibold text-gray-700">Share this action:</span>
      <div class="flex space-x-3">
        <button 
          class="share-button text-gray-600 hover:text-blue-600 transition-colors"
          data-platform="twitter"
          data-title={title}
          data-url={ctaLink}
        >
          <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
            <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
          </svg>
        </button>
        
        <button 
          class="share-button text-gray-600 hover:text-blue-800 transition-colors"
          data-platform="facebook"
          data-title={title}
          data-url={ctaLink}
        >
          <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
            <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
          </svg>
        </button>
        
        <button 
          class="share-button text-gray-600 hover:text-blue-700 transition-colors"
          data-platform="linkedin"
          data-title={title}
          data-url={ctaLink}
        >
          <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
            <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
          </svg>
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  // Social sharing functionality
  document.addEventListener('DOMContentLoaded', function() {
    const shareButtons = document.querySelectorAll('.share-button') as NodeListOf<HTMLButtonElement>;
    
    shareButtons.forEach(button => {
      button.addEventListener('click', function() {
        const platform = this.dataset.platform;
        const title = encodeURIComponent(this.dataset.title || '');
        const url = encodeURIComponent(this.dataset.url || window.location.href);
        
        let shareUrl = '';
        
        switch (platform) {
          case 'twitter':
            shareUrl = `https://twitter.com/intent/tweet?text=${title}&url=${url}&hashtags=HealthcareReform,HealthcareActivist`;
            break;
          case 'facebook':
            shareUrl = `https://www.facebook.com/sharer/sharer.php?u=${url}`;
            break;
          case 'linkedin':
            shareUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${url}`;
            break;
        }
        
        if (shareUrl) {
          window.open(shareUrl, '_blank', 'width=600,height=400');
        }
      });
    });
  });
</script>