---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<link rel="preload" href="https://fonts.googleapis.com/css2?family=Noto+Sans+Display:ital,opsz,wght@0,14..100,100..900;1,14..100,100..900&display=swap" as="style" onload="this.onload=null;this.rel='stylesheet'">
		<noscript><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Noto+Sans+Display:ital,opsz,wght@0,14..100,100..900;1,14..100,100..900&display=swap"></noscript>
		<link rel="preload" href="https://fonts.googleapis.com/css2?family=Mrs+Saint+Delafield&display=swap" as="style" onload="this.onload=null;this.rel='stylesheet'">
		<noscript><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Mrs+Saint+Delafield&display=swap"></noscript>
		<title>{title}</title>
		
	</head>
	<body>
		<header class="bg-blue-800 text-white py-4 shadow-md">
			<div class="container mx-auto flex flex-col md:flex-row justify-between items-center px-4">
				<a href="/" class="flex items-center">
					<span class="self-center text-4xl font-extrabold whitespace-nowrap tracking-tight noto-sans-display-bold neon-logo" style="letter-spacing: 0.03em; font-family: 'Noto Sans Display', sans-serif; font-weight: 700; font-optical-sizing: auto; font-variation-settings: 'wdth' 100; color: #00ffff; text-shadow: 0 0 1px #1e3a8a, 0 0 3px #00ffff, 0 0 6px #00ffff, 0 0 9px #00ffff, 0 0 12px #00ffff, 0 0 15px #00ffff, 0 0 18px #00ffff, 0 0 21px #00ffff;">
						ACME Marketing
					</span>
				</a>
				<nav>
					<ul class="flex flex-wrap justify-center space-x-4 text-lg">
						<li><a href="/" class="hover:text-red-400 transition duration-300">Home</a></li>
						<li><a href="/services" class="hover:text-red-400 transition duration-300">Services</a></li>
				<li><a href="/courses" class="hover:text-red-400 transition duration-300">Courses</a></li>
						<li><a href="/posts" class="hover:text-red-400 transition duration-300">Blog</a></li>
						<li><a href="#" id="open-consultation-modal-contact" class="hover:text-red-400 transition duration-300">Contact</a></li>
					</ul>
				</nav>
			</div>
		</header>
		<slot />

		<!-- Ebook Popup Form Modal -->
		<div id="lead-form-modal" class="fixed inset-0 bg-black/80 backdrop-blur-[6px] flex items-center justify-center z-50 hidden">
			<div class="relative bg-gradient-to-br from-blue-900/90 to-cyan-900/90 border-2 border-cyan-400/40 rounded-2xl shadow-2xl max-w-lg w-full p-10 flex flex-col items-center animate-glass-modal">
				<!-- Rifle Scope AI SVG Icon -->
				<div class="mb-4">
					<svg class="w-16 h-16" viewBox="0 0 80 80" fill="none" xmlns="http://www.w3.org/2000/svg">
						<circle cx="40" cy="40" r="32" fill="#22d3ee" fill-opacity="0.18"/>
						<circle cx="40" cy="40" r="30" stroke="#fff" stroke-width="1.5" fill="none"/>
						<!-- Crosshairs -->
						<line x1="40" y1="20" x2="40" y2="60" stroke="#fff" stroke-width="2.5" stroke-linecap="round"/>
						<line x1="20" y1="40" x2="60" y2="40" stroke="#fff" stroke-width="2.5" stroke-linecap="round"/>
						<!-- Tick marks -->
						<line x1="40" y1="10" x2="40" y2="16" stroke="#fff" stroke-width="1.2"/>
						<line x1="40" y1="64" x2="40" y2="70" stroke="#fff" stroke-width="1.2"/>
						<line x1="10" y1="40" x2="16" y2="40" stroke="#fff" stroke-width="1.2"/>
						<line x1="64" y1="40" x2="70" y2="40" stroke="#fff" stroke-width="1.2"/>
					</svg>
				</div>
				<button id="close-ebook-modal" class="absolute top-4 right-4 text-cyan-300 hover:text-fuchsia-400 text-3xl font-bold transition-all">&times;</button>
				<h2 class="text-3xl font-extrabold mb-6 text-center text-white drop-shadow-lg tracking-tight break-words whitespace-normal leading-tight">Download Your Ebook</h2>
				<form id="ebook-form" class="w-full space-y-6 mt-2">
					<input type="hidden" id="ebook-page-of-click" name="page_of_click">
					<input type="hidden" id="ebook-book-id" name="book_id">
					<div class="relative">
						<input type="text" id="ebook-first-name" name="first_name" class="peer bg-transparent border-b-2 border-cyan-300 text-white placeholder-transparent focus:outline-none focus:border-fuchsia-400 w-full py-3 px-2 transition-all" placeholder="First Name" required />
						<label for="ebook-first-name" class="absolute left-2 top-3 text-cyan-200 text-base transition-all peer-placeholder-shown:top-3 peer-placeholder-shown:text-base peer-focus:-top-8 peer-focus:text-xs peer-focus:text-fuchsia-200 pointer-events-none">First Name</label>
					</div>
					<div class="relative">
						<input type="text" id="ebook-last-name" name="last_name" class="peer bg-transparent border-b-2 border-cyan-300 text-white placeholder-transparent focus:outline-none focus:border-fuchsia-400 w-full py-3 px-2 transition-all" placeholder="Last Name" required />
						<label for="ebook-last-name" class="absolute left-2 top-3 text-cyan-200 text-base transition-all peer-placeholder-shown:top-3 peer-placeholder-shown:text-base peer-focus:-top-8 peer-focus:text-xs peer-focus:text-fuchsia-200 pointer-events-none">Last Name</label>
					</div>
					<div class="relative">
						<input type="email" id="ebook-email" name="email" class="peer bg-transparent border-b-2 border-cyan-300 text-white placeholder-transparent focus:outline-none focus:border-fuchsia-400 w-full py-3 px-2 transition-all" placeholder="Email" required />
						<label for="ebook-email" class="absolute left-2 top-3 text-cyan-200 text-base transition-all peer-placeholder-shown:top-3 peer-placeholder-shown:text-base peer-focus:-top-8 peer-focus:text-xs peer-focus:text-fuchsia-200 pointer-events-none">Email</label>
					</div>
					<div class="text-center mt-6">
						<button type="submit" class="bg-gradient-to-r from-cyan-400 via-blue-600 to-fuchsia-500 text-white font-bold py-3 px-8 rounded-full shadow-lg hover:from-fuchsia-500 hover:to-cyan-400 hover:scale-105 focus:outline-none focus:ring-4 focus:ring-fuchsia-300 transition-all duration-300 text-lg tracking-wide">
							Download Ebook
						</button>
					</div>
				</form>
				<!-- Tagline below CTA -->
				<div class="mt-8 text-center text-cyan-200 text-base font-semibold tracking-wide italic opacity-80">
					AI First Marketingâ€”Unleashed
				</div>
			</div>
		</div>

		<!-- Consultation Popup Form Modal -->
		<div id="consultation-form-modal" class="fixed inset-0 bg-green-200 bg-opacity-90 flex items-center justify-center z-50 hidden">
			<div class="bg-green-100 p-8 rounded-lg shadow-xl max-w-lg w-full relative">
				<button id="close-consultation-modal" class="absolute top-4 right-4 text-gray-500 hover:text-gray-800 text-2xl font-bold">&times;</button>
				<h2 class="text-3xl font-bold mb-6 text-center text-gray-800">Get a Free Consultation</h2>
				<form id="consultation-form" class="grid grid-cols-1 gap-4">
					<input type="hidden" id="consultation-page-of-click" name="page_of_click">
					<div>
						<label for="consultation-first-name" class="block text-gray-700 text-sm font-bold mb-2">First Name:</label>
						<input type="text" id="consultation-first-name" name="first_name" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
					</div>
					<div>
						<label for="consultation-last-name" class="block text-gray-700 text-sm font-bold mb-2">Last Name:</label>
						<input type="text" id="consultation-last-name" name="last_name" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
					</div>
					<div>
						<label for="consultation-email" class="block text-gray-700 text-sm font-bold mb-2">Email:</label>
						<input type="email" id="consultation-email" name="email" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
					</div>
					<div>
						<label for="consultation-company" class="block text-gray-700 text-sm font-bold mb-2">Company:</label>
						<input type="text" id="consultation-company" name="company" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
					</div>
					<div>
						<label for="consultation-challenge" class="block text-gray-700 text-sm font-bold mb-2">Your biggest challenge is...</label>
						<textarea id="consultation-challenge" name="challenge" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" rows="4"></textarea>
					</div>
					<div class="col-span-1 text-center">
						<button type="submit" class="bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-full focus:outline-none focus:shadow-outline transition duration-300">Request Consultation</button>
					</div>
				</form>
			</div>
		</div>

	<footer class="bg-gray-800 text-white py-8 mt-12">
			<div class="container mx-auto px-4 text-center">
				<div class="flex flex-col md:flex-row justify-center items-center space-y-4 md:space-y-0 md:space-x-8 mb-4">
					<a href="/about" class="hover:underline">About</a>
					<a href="/privacy" class="hover:underline">Privacy</a>
				</div>
				<p class="text-sm mb-2">Made With Love in Jacksonville, Florda</p>
				<p class="text-sm mb-2">Email: <a href="mailto:hello@acmemarketing.us" class="hover:underline">hello@acmemarketing.us</a></p>
				<p class="text-sm">&copy; {new Date().getFullYear()} ACME Marketing. All rights reserved.</p>
			</div>
		</footer>
	<script>
// --- MODAL SCRIPT ---

// A. Get all the elements we need
const openEbookModalButtons = document.querySelectorAll('[id^="open-ebook-modal"]');
const ebookModal = document.getElementById('lead-form-modal');
const closeEbookModalButton = document.getElementById('close-ebook-modal');
const ebookPageOfClickInput = document.getElementById('ebook-page-of-click');
const ebookBookIdInput = document.getElementById('ebook-book-id');

const openConsultationModalButton = document.getElementById('open-consultation-modal');
const openConsultationModalContactButton = document.getElementById('open-consultation-modal-contact');
const openConsultationModalHeroButton = document.getElementById('open-consultation-modal-hero');
const openConsultationModalServicesButton = document.getElementById('open-consultation-modal-services');
const openConsultationModalServicesCtaButton = document.getElementById('open-consultation-modal-services-cta');
const consultationModal = document.getElementById('consultation-form-modal');
const closeConsultationModalButton = document.getElementById('close-consultation-modal');
const consultationPageOfClickInput = document.getElementById('consultation-page-of-click');

// B. Generic Modal Functions
function showModal(modal, pageOfClickInput) {
  modal.classList.remove('hidden');
  modal.classList.add('flex');
  document.body.style.overflow = 'hidden';
  if (pageOfClickInput) {
    pageOfClickInput.value = window.location.href;
  }
}

function hideModal(modal) {
  modal.classList.add('hidden');
  modal.classList.remove('flex');
  document.body.style.overflow = '';
}

// C. Ebook Modal Logic - Handled in the floating label section below

if (closeEbookModalButton && ebookModal) {
  closeEbookModalButton.addEventListener('click', () => hideModal(ebookModal));
  ebookModal.addEventListener('click', (e) => {
    if (e.target === ebookModal) {
      hideModal(ebookModal);
    }
  });
}

// D. Consultation Modal Logic
if (openConsultationModalButton) {
  openConsultationModalButton.addEventListener('click', (e) => {
    e.preventDefault();
    showModal(consultationModal, consultationPageOfClickInput);
  });
}

if (openConsultationModalContactButton) {
	openConsultationModalContactButton.addEventListener('click', (e) => {
		e.preventDefault();
		showModal(consultationModal, consultationPageOfClickInput);
	});
}

if (openConsultationModalHeroButton) {
	openConsultationModalHeroButton.addEventListener('click', (e) => {
		e.preventDefault();
		showModal(consultationModal, consultationPageOfClickInput);
	});
}

if (openConsultationModalServicesButton) {
	openConsultationModalServicesButton.addEventListener('click', (e) => {
		e.preventDefault();
		showModal(consultationModal, consultationPageOfClickInput);
	});
}

if (openConsultationModalServicesCtaButton) {
	openConsultationModalServicesCtaButton.addEventListener('click', (e) => {
		e.preventDefault();
		showModal(consultationModal, consultationPageOfClickInput);
	});
}

if (closeConsultationModalButton) {
	closeConsultationModalButton.addEventListener('click', () => hideModal(consultationModal));
}

if (consultationModal) {
	consultationModal.addEventListener('click', (e) => {
		if (e.target === consultationModal) {
			hideModal(consultationModal);
		}
	});
}

// E. Floating Label Logic for Ebook Form
function handleFloatingLabels() {
  const inputs = document.querySelectorAll('#ebook-form input[type="text"], #ebook-form input[type="email"]');
  
  inputs.forEach(input => {
    const label = document.querySelector(`label[for="${input.id}"]`);
    if (!label) return;
    
    const inputElement = input as HTMLInputElement;
    
    // Function to update label position based on input value
    function updateLabelPosition() {
      if (!label) return;
      const labelElement = label as HTMLElement;
      if (inputElement.value.trim() !== '') {
        // Hide the label completely when field has content
        labelElement.style.opacity = '0';
        labelElement.style.visibility = 'hidden';
      } else {
        // Show the label when field is empty
        labelElement.style.opacity = '1';
        labelElement.style.visibility = 'visible';
      }
    }
    
    // Check if input has content on page load
    updateLabelPosition();
    
    // Handle input events
    inputElement.addEventListener('input', updateLabelPosition);
    
    // Handle focus events
    inputElement.addEventListener('focus', function() {
      if (!label) return;
      const labelElement = label as HTMLElement;
      if (this.value.trim() === '') {
        // Show label when focusing on empty field
        labelElement.style.opacity = '1';
        labelElement.style.visibility = 'visible';
      }
    });
    
    // Handle blur events
    inputElement.addEventListener('blur', updateLabelPosition);
    
    // Handle autofill events (browser autofill)
    inputElement.addEventListener('change', updateLabelPosition);
    inputElement.addEventListener('animationstart', function(e) {
      if (e.animationName === 'onAutoFillStart') {
        updateLabelPosition();
      }
    });
    
    // Check for autofill on a timer (fallback for browsers that don't fire events)
    setTimeout(updateLabelPosition, 100);
    setTimeout(updateLabelPosition, 500);
    setTimeout(updateLabelPosition, 1000);
  });
}

// Initialize floating labels when ebook modal is shown
openEbookModalButtons.forEach(button => {
  button.addEventListener('click', (e) => {
    e.preventDefault();
    if (ebookModal) {
      showModal(ebookModal, ebookPageOfClickInput);
      // Initialize floating labels after modal is shown
      setTimeout(handleFloatingLabels, 100);
    }
    // Set the book ID from the button's data attribute
    if (ebookBookIdInput) {
      const bookIdInput = ebookBookIdInput as HTMLInputElement;
      bookIdInput.value = button.getAttribute('data-book-id') || '';
    }
  });
});

// Initialize floating labels when DOM is ready (for autofill detection)
document.addEventListener('DOMContentLoaded', () => {
  // Check for autofilled fields periodically
  setInterval(() => {
    const ebookForm = document.getElementById('ebook-form');
    if (ebookForm && !ebookForm.classList.contains('hidden')) {
      handleFloatingLabels();
    }
  }, 2000);
});
</script>

<style>
@keyframes glass-modal {
  0% { transform: scale(0.95) translateY(40px); opacity: 0; }
  100% { transform: scale(1) translateY(0); opacity: 1; }
}
.animate-glass-modal {
  animation: glass-modal 0.4s ease-out;
}

@keyframes neon-pulse {
  0%, 100% { 
    text-shadow: 0 0 1px #1e3a8a, 0 0 3px #00ffff, 0 0 6px #00ffff, 0 0 9px #00ffff, 0 0 12px #00ffff, 0 0 15px #00ffff, 0 0 18px #00ffff, 0 0 21px #00ffff;
  }
  50% { 
    text-shadow: 0 0 1px #1e3a8a, 0 0 6px #00ffff, 0 0 12px #00ffff, 0 0 18px #00ffff, 0 0 24px #00ffff, 0 0 30px #00ffff, 0 0 36px #00ffff, 0 0 42px #00ffff;
  }
}

.neon-logo {
  animation: neon-pulse 3s ease-in-out infinite;
}

@keyframes ai-pulse {
  0%, 100% { filter: drop-shadow(0 0 0px #fff); }
  50% { filter: drop-shadow(0 0 16px #fff); }
}
.animate-ai-pulse {
  animation: ai-pulse 2.5s infinite;
}
@keyframes spin-slow {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
.animate-spin-slow {
  transform-origin: 50% 50%;
  animation: spin-slow 8s linear infinite;
}
@keyframes cta-pulse {
  0%, 100% { box-shadow: 0 0 0 0 rgba(236,72,153,0.3); }
  50% { box-shadow: 0 0 0 12px rgba(34,211,238,0.15); }
}
.animate-cta-pulse {
  animation: cta-pulse 2.2s infinite;
}

/* Autofill detection */
@keyframes onAutoFillStart {
  from {/**/}
  to {/**/}
}

@keyframes onAutoFillCancel {
  from {/**/}
  to {/**/}
}

input:-webkit-autofill {
  animation-name: onAutoFillStart;
}

input:not(:-webkit-autofill) {
  animation-name: onAutoFillCancel;
}
</style>
	</body>
</html>
