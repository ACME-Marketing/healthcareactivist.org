---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { graphQLClient, gql } from '../../lib/graphql';

interface Post {
  title: string;
  uri: string;
  content: string;
  featuredImage?: {
    node?: {
      sourceUrl?: string;
      altText?: string;
    };
  };
}

const GET_POSTS = gql`
  query GetPosts {
    posts(first: 100, where: { tagSlugIn: ["healthcareactivist", "all"] }) {
      nodes {
        title
        uri
        content
        featuredImage {
          node {
            sourceUrl
            altText
          }
        }
      }
    }
  }
`;

let posts: Post[] = [];
try {
  const data = await graphQLClient.request(GET_POSTS) as { posts: { nodes: Post[] } };
  posts = data.posts.nodes;
} catch (error) {
  console.error("Error fetching posts:", error);
}
---
<BaseLayout title="Blog">
  <h1 class="text-4xl font-bold mb-8">Latest Posts</h1>
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
    {posts.map((post) => (
      <a href={`/posts${post.uri}`} class="border rounded-lg p-4 hover:bg-gray-100">
        <h2 class="text-2xl font-bold mb-2">{post.title}</h2>
        {post.featuredImage?.node?.sourceUrl && (
          <img src={post.featuredImage.node.sourceUrl} alt={post.featuredImage.node.altText || post.title} class="w-full h-auto rounded-md mb-4" />
        )}
        <div set:html={post.content.substring(0, 150) + '...'}></div>
      </a>
    ))}
  </div>
</BaseLayout>